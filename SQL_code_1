

SELECT *
 FROM `generated-case-336305.Covid19.covid_deaths`
 WHERE continent IS NOT NULL
 ORDER BY 3,4


 SELECT *
 FROM `generated-case-336305.Covid19.covid_vaccine`
 WHERE continent IS NOT NULL
 ORDER BY 3,4


  --Selecting the data that we are going to be using
 SELECT location, date, total_cases, new_cases, total_deaths, population
 FROM `generated-case-336305.Covid19.covid_deaths`
 WHERE continent IS NOT NULL
 ORDER BY location, date


 
  -- Looking at Total Cases vs Total Deaths in India
  -- Likelyhood of dying if you contracted COVID in India
  SELECT location, date, total_cases, total_deaths, (total_deaths/total_cases)*100 AS death_percent
 FROM `generated-case-336305.Covid19.covid_deaths`
 WHERE location = 'India' AND continent IS NOT NULL
 ORDER BY location, date




  -- Looking at Total Cases vs Total Deaths
  SELECT location, date, total_cases, total_deaths, (total_deaths/total_cases)*100 AS death_percent
 FROM `generated-case-336305.Covid19.covid_deaths`
  WHERE continent IS NOT NULL
 ORDER BY location, date


  --Looking at Total Cases vs Population in India
 -- Shows what percentage of population got Covid in India
   SELECT location, date, total_cases, population, (total_cases/population)*100 AS infected_population_percent
 FROM `generated-case-336305.Covid19.covid_deaths`
 WHERE location = 'India' AND continent IS NOT NULL
 ORDER BY location, date


 -- Global Infected Population
 SELECT location, date, total_cases, population, (total_cases/population)*100 AS infected_population_percent
 FROM `generated-case-336305.Covid19.covid_deaths`
 WHERE continent IS NOT NULL
 ORDER BY location, date


 -- Looking at countries with highest infection rates compared to poulation
 SELECT location, MAX(total_cases) AS max_infection, population, MAX((total_cases/population))*100 AS max_infected_population_percent
 FROM `generated-case-336305.Covid19.covid_deaths`
 --WHERE location = 'India'
 WHERE continent IS NOT NULL
 GROUP BY location, population
 ORDER BY max_infected_population_percent DESC


  -- Showing countries with highest death counts per population
SELECT location, MAX(CAST(total_deaths AS int64)) AS max_death_count -- we casted the total_death as there was a problem with the data type 
FROM `generated-case-336305.Covid19.covid_deaths`
 WHERE continent IS NOT NULL
GROUP BY location
ORDER BY max_death_count DESC


-- Showing continents with highest death counts
SELECT continent, MAX(CAST(total_deaths AS int64)) AS max_death_count
FROM `generated-case-336305.Covid19.covid_deaths` 
WHERE continent IS NOT NULL   
GROUP BY continent                       
ORDER BY max_death_count DESC


-- Global Numbers
  SELECT date, SUM(new_cases) AS total_newcases, SUM(CAST(new_deaths AS int64)) AS total_newdeaths, SUM(CAST(new_deaths AS int64))/SUM(new_cases)*100 AS global_death_percent
 FROM `generated-case-336305.Covid19.covid_deaths`  
 WHERE continent IS NOT NULL
 GROUP BY date
 ORDER BY 1,2

 -- without date
  SELECT SUM(new_cases) AS total_newcases, SUM(CAST(new_deaths AS int64)) AS total_newdeaths, SUM(CAST(new_deaths AS int64))/SUM(new_cases)*100 AS global_death_percent
 FROM `generated-case-336305.Covid19.covid_deaths`  
 WHERE continent IS NOT NULL
 ORDER BY 1,2


 -- Using JOINS
SELECT*
FROM `generated-case-336305.Covid19.covid_deaths` AS dea
JOIN `generated-case-336305.Covid19.covid_vaccine` AS vac
ON dea.location = vac.location
AND dea.date = vac.date   



-- Looking at Total Population vs Vaccination
SELECT dea.continent, dea.location, dea.date, dea.population, vac.new_vaccinations
FROM `generated-case-336305.Covid19.covid_deaths` AS dea
JOIN `generated-case-336305.Covid19.covid_vaccine` AS vac
ON dea.location = vac.location
AND dea.date = vac.date   
WHERE dea.continent IS NOT NULL
ORDER BY location, date


-- Breaking up by location using PARTITION BY and using ROLLING COUNT
SELECT dea.continent, dea.location, dea.date, dea.population, vac.new_vaccinations, SUM(CAST(vac.new_vaccinations AS int64)) OVER (PARTITION BY dea.location ORDER BY dea.location, dea.date) AS rolling_count_vac      
FROM`generated-case-336305.Covid19.covid_deaths` AS dea
JOIN `generated-case-336305.Covid19.covid_vaccine` AS vac
ON dea.location = vac.location
AND dea.date = vac.date   
WHERE dea.continent IS NOT NULL
ORDER BY location, date


--New vaccine percentage
SELECT dea.continent, dea.location, dea.date, dea.population, vac.new_vaccinations, SUM(CAST(vac.new_vaccinations AS int64)) OVER (PARTITION BY dea.location ORDER BY dea.location, dea.date) AS rolling_count_vac, ( SUM(CAST(vac.new_vaccinations AS int64)) OVER (PARTITION BY dea.location ORDER BY dea.location, dea.date)/population)*100 AS total_vac_percent     
FROM `generated-case-336305.Covid19.covid_deaths` AS dea
JOIN `generated-case-336305.Covid19.covid_vaccine` AS vac
ON dea.location = vac.location
AND dea.date = vac.date   
WHERE dea.continent IS NOT NULL
ORDER BY location, date



-- Using CTE (Common Table Expression)
WITH pop_vs_vac (SELECT continent, location, date, population, new_vaccinations, rolling_count_vac)
AS
(
SELECT dea.continent, dea.location, dea.date, dea.population, vac.new_vaccinations, SUM(CAST(vac.new_vaccinations AS int64)) OVER (PARTITION BY dea.location ORDER BY dea.location, dea.date) AS rolling_count_vac      
FROM `generated-case-336305.Covid19.covid_deaths` AS dea
JOIN `generated-case-336305.Covid19.covid_vaccine` AS vac
ON dea.location = vac.location
AND dea.date = vac.date   
WHERE dea.continent IS NOT NULL
--ORDER BY location, date  
)
SELECT*, (rolling_count_vac/population)*100
FROM pop_vs_vac


-- Temp Table
DROP TABLE IF EXISTS
CREATE TABLE 'percent_population_vaccinated'
(
continent varchar(255),
location varchar(255),
date datetime,
population int64,
new_vaccinations int64,
rolling_count_vaccinated int64
)
INSERT INTO
SELECT dea.continent, dea.location, dea.date, dea.population, vac.new_vaccinations, SUM(CAST(vac.new_vaccinations AS int64)) OVER (PARTITION BY dea.location ORDER BY dea.location, dea.date) AS rolling_count_vac,    
FROM `generated-case-336305.Covid19.covid_deaths` AS dea
JOIN `generated-case-336305.Covid19.covid_vaccine` AS vac
ON dea.location = vac.location
AND dea.date = vac.date   
WHERE dea.continent IS NOT NULL
-- ORDER BY location, date
SELECT*, (rolling_count_vac/population)*100
FROM percent_population_vaccinated


--Alternative to Temp Table
SELECT dea.continent, dea.location, dea.date, dea.population, vac.new_vaccinations, SUM(CAST(vac.new_vaccinations AS int64)) OVER (PARTITION BY dea.location ORDER BY dea.location, dea.date) AS rolling_count_vac,    
FROM `generated-case-336305.Covid19.covid_deaths` AS dea
JOIN `generated-case-336305.Covid19.covid_vaccine` AS vac
ON dea.location = vac.location
AND dea.date = vac.date   
WHERE dea.continent IS NOT NULL

--save the above table and reupload it, then run the following query:
SELECT continent, location, date, population, new_vaccinations, rolling_count_vac, (rolling_count_vac/population)*100 AS rolling_vac_percent,  
FROM `generated-case-336305.Covid19.percent_population_vaccinated` 
WHERE continent IS NOT NULL
ORDER BY date
